var annotated =
[
    [ "AsymmetricQuantizationError", "structAsymmetricQuantizationError.html", "structAsymmetricQuantizationError" ],
    [ "AudioMain", "classAudioMain.html", "classAudioMain" ],
    [ "CalculateSoundOrigin", "classCalculateSoundOrigin.html", "classCalculateSoundOrigin" ],
    [ "CombinedError", "structCombinedError.html", "structCombinedError" ],
    [ "DepthAudioSourceData", "structDepthAudioSourceData.html", "structDepthAudioSourceData" ],
    [ "DepthColorArraySizeMismatch", "structDepthColorArraySizeMismatch.html", "structDepthColorArraySizeMismatch" ],
    [ "DepthModel", "classDepthModel.html", "classDepthModel" ],
    [ "InvalidFloat32QuantizationTypeError", "structInvalidFloat32QuantizationTypeError.html", "structInvalidFloat32QuantizationTypeError" ],
    [ "InvalidInputFormatForModel", "structInvalidInputFormatForModel.html", "structInvalidInputFormatForModel" ],
    [ "InvalidOutputFormatForModel", "structInvalidOutputFormatForModel.html", "structInvalidOutputFormatForModel" ],
    [ "InvalidQuantizedType", "structInvalidQuantizedType.html", "structInvalidQuantizedType" ],
    [ "MemoryData", "structMemoryData.html", "structMemoryData" ],
    [ "MetricDepthModel", "classMetricDepthModel.html", "classMetricDepthModel" ],
    [ "MutexGuard", "classMutexGuard.html", "classMutexGuard" ],
    [ "ObjectAudioSourceData", "structObjectAudioSourceData.html", "structObjectAudioSourceData" ],
    [ "ObjectTracker", "classObjectTracker.html", "classObjectTracker" ],
    [ "Overloads", "structOverloads.html", null ],
    [ "ProfileScope", "structProfileScope.html", "structProfileScope" ],
    [ "ProfileScopeRecord", "structProfileScopeRecord.html", "structProfileScopeRecord" ],
    [ "ProfilingFrame", "classProfilingFrame.html", "classProfilingFrame" ],
    [ "QuantizationElementsMismatch", "structQuantizationElementsMismatch.html", "structQuantizationElementsMismatch" ],
    [ "SpatialAudio", "classSpatialAudio.html", "classSpatialAudio" ],
    [ "SpatialAudioSettings", "classSpatialAudioSettings.html", "classSpatialAudioSettings" ],
    [ "TensorBuffer", "structTensorBuffer.html", "structTensorBuffer" ],
    [ "TensorType", "classTensorType.html", "classTensorType" ],
    [ "TfLiteAllocateTensorsError", "structTfLiteAllocateTensorsError.html", "structTfLiteAllocateTensorsError" ],
    [ "TfLiteCopyFromInputTensorError", "structTfLiteCopyFromInputTensorError.html", "structTfLiteCopyFromInputTensorError" ],
    [ "TfLiteCopyToOutputTensorError", "structTfLiteCopyToOutputTensorError.html", "structTfLiteCopyToOutputTensorError" ],
    [ "TfLiteCreateInterpreterError", "structTfLiteCreateInterpreterError.html", "structTfLiteCreateInterpreterError" ],
    [ "TfLiteInvokeInterpreterError", "structTfLiteInvokeInterpreterError.html", "structTfLiteInvokeInterpreterError" ],
    [ "TfLiteNonFloatTensorTypeError", "structTfLiteNonFloatTensorTypeError.html", "structTfLiteNonFloatTensorTypeError" ],
    [ "TfLiteReporterUserData", "structTfLiteReporterUserData.html", "structTfLiteReporterUserData" ],
    [ "TfLiteRuntime", "classTfLiteRuntime.html", "classTfLiteRuntime" ],
    [ "TfLiteTensorElementCountMismatch", "structTfLiteTensorElementCountMismatch.html", "structTfLiteTensorElementCountMismatch" ],
    [ "TfLiteTensorsNotCreatedError", "structTfLiteTensorsNotCreatedError.html", "structTfLiteTensorsNotCreatedError" ],
    [ "YoloModel", "classYoloModel.html", "classYoloModel" ]
];